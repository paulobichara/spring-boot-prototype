buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'jacoco'
    id 'com.palantir.docker-run' version '0.22.1'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'paulobichara.org'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

// Enforcing minimum source code test coverage of 80%
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination = file("${buildDir}/jacocoHtml")
    }
}

dockerRun {
    name 'prototype-mysql'
    image 'mysql:8.0'
    ports '3306:3306'
    daemonize true
    env 'MYSQL_ROOT_PASSWORD': 'password', 'TZ': 'UTC'
}

configurations {
    implementation {
        exclude module: 'junit'
    }
}

dependencies {
    // Lombok dependencies
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"

    // Spring dependencies
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")

    // Java JWT dependencies
    compile "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    runtime "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtime "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

    // SpringFox dependencies
    compile "io.springfox:springfox-swagger2:$springFoxVersion"
    compile "io.springfox:springfox-data-rest:$springFoxVersion"
    compile "io.springfox:springfox-swagger-ui:$springFoxVersion"
    compile "io.springfox:springfox-bean-validators:$springFoxVersion"
    compile "io.springfox:springfox-swagger-ui:$springFoxVersion"

    // Database-related dependencies
    compile 'org.liquibase:liquibase-core'
    runtimeOnly 'mysql:mysql-connector-java'
    testRuntimeOnly 'com.h2database:h2'

    // JUnit dependencies
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // Mockito dependencies
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.mockito:mockito-junit-jupiter:$mockitoVersion"
}

test {
    useJUnitPlatform()

    dependsOn 'cleanTest'

    systemProperty 'spring.profiles.active', 'test'
    systemProperty "user.timezone", "UTC"
}